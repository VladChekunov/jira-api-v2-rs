/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WorkflowRules : A collection of transition rules.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowRules {
    /// The workflow conditions.
    #[serde(rename = "conditions")]
    pub conditions: Vec<models::WorkflowTransitionRule>,
    #[serde(rename = "conditionsTree", skip_serializing_if = "Option::is_none")]
    pub conditions_tree: Option<Box<models::WorkflowConditionBean>>,
    /// The workflow validators.
    #[serde(rename = "validators")]
    pub validators: Vec<models::WorkflowTransitionRule>,
    /// The workflow post functions.
    #[serde(rename = "postFunctions")]
    pub post_functions: Vec<models::WorkflowTransitionRule>,
}

impl WorkflowRules {
    /// A collection of transition rules.
    pub fn new(conditions: Vec<models::WorkflowTransitionRule>, validators: Vec<models::WorkflowTransitionRule>, post_functions: Vec<models::WorkflowTransitionRule>) -> WorkflowRules {
        WorkflowRules {
            conditions,
            conditions_tree: None,
            validators,
            post_functions,
        }
    }
}

