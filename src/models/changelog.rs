/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Changelog : A changelog.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Changelog {
    /// The ID of the changelog.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The user who made the change.
    #[serde(rename = "author", skip_serializing_if = "Option::is_none")]
    pub author: Option<Box<models::UserDetails>>,
    /// The date on which the change took place.
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    /// The list of items changed.
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::ChangeDetails>>,
    /// The history metadata associated with the changed.
    #[serde(rename = "historyMetadata", skip_serializing_if = "Option::is_none")]
    pub history_metadata: Option<models::HistoryMetadata>,
}

impl Changelog {
    /// A changelog.
    pub fn new() -> Changelog {
        Changelog {
            id: None,
            author: None,
            created: None,
            items: None,
            history_metadata: None,
        }
    }
}

